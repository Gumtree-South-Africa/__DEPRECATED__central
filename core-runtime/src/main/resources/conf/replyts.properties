replyts.tenant=generic

replyts.http.port=18081

# Register this service with Consul
service.discovery.enabled=false

service.discovery.hostname=localhost
service.discovery.port=8500

# Retrieve configuration properties for this service from Consul
service.configuration.enabled=false

cluster.jmx.enabled=true

mailreceiver.filesystem.dropfolder=/tmp/mailreceiver
mailreceiver.retries=5
mailreceiver.retrydelay.minutes=5

mailcloaking.domains=test.com,test2.com
mailcloaking.localized.buyer=Buyer
mailcloaking.localized.seller=Seller

replyts.threadpool.size=2
replyts.maxConversationAgeDays=180

# Filesystem based delivery
delivery.filesystem.outputdir=/tmp/output
delivery.filesystem.temp.prefix=.
delivery.filesystem.prefix=processed_
delivery.filesystem.postfix=.mail

# SMTP based mail delivery
delivery.smtp.host=localhost
delivery.smtp.port=10025
delivery.smtp.username=
delivery.smtp.password=
delivery.smtp.timeout.connect.ms=10000
delivery.smtp.timeout.read.ms=10000
delivery.smtp.timeout.write.ms=10000

# How/where to persist to
persistence.strategy=riak

# Riak
# Hosts list is a comma separated list of host names or ip addresses.
persistence.riak.datacenter.primary.hosts=localhost

persistence.riak.pb.port=18087
persistence.riak.maxConnectionsToRiakCluster=${replyts.threadpool.size}
persistence.riak.connectionPoolSizePerRiakHost=${replyts.threadpool.size}
persistence.riak.connectionTimeoutMs=1000
persistence.riak.requestTimeoutMs=5000
persistence.riak.idleConnectionTimeoutMs=60000


# Elastic Search
search.es.clustername=replytscluster
search.es.endpoints=localhost:19300
sanity.riak.http.port=18098

#Elastic search sanity checks
sanity.es.timeframehours=1
sanity.es.endpoints=${search.es.endpoints}
sanity.es.cluster=${search.es.clustername}

# DeltaIndexer
batch.bulkoperations.threadcount=1
batch.indexer.chunksize.minutes=2

#Streaming indexer with default recommended values for FullReindex based on MP data executed by Comaas with -Xmx16G
replyts.indexer.type=streaming
replyts.indexer.streaming.threadcount=16
# This essentially means the queue is unbounded
replyts.indexer.streaming.queue.size=100000
# This produces around 1200 unique conversation Id's
replyts.indexer.streaming.conversationid.batch.size=3000
# The maximum number of batches to produce before stopping processing and waiting for elastic to index
replyts.indexer.streaming.maxWaitingTasks=300
# A maximum number of conversations to fetch documents for and submit to elastic in one go for indexing
# This works with elastic Xmx4.5G, for values above 1000 more memory is required, 100 conversations contains 250 documents on average
batch.bulkoperations.maxChunkSize=350

# SSL

# The next protocol in the protocol chain. Values may be "SSL-NPN", "NPN", "spdy/3", "spdy/2", "http/1.1" (most of the time "http/1.1" is the way to go)
replyts.ssl.protocol=http/1.1
# Buffer size in bytes
replyts.ssl.buffersize.bytes=32678
# Idle timeout in milliseconds
replyts.ssl.idletimeout.milliseconds=60000
replyts.ssl.needclientauth=false
replyts.ssl.allow.http=false

# Selects the implementation type for indexing of conversations in Elastic Search.
# Currently supported types are: `chunked` and `streaming`. Default is `chunked`.
replyts.indexer.type=chunked

replyts.jetty.gzip.enabled=true