version: '3'
services:
  consul:
    image: consul
    ports:
    - "8500:8500" # web ui
  registrator:
    image: gliderlabs/registrator
    command: -ip=127.0.0.1 consul://consul:8500
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"
  mail:
    image: mailhog/mailhog
    ports:
    - "8090:8025" # web ui
    - "8025:1025"
  cassandra:
    image: registry.ecg.so/comaas_cassandra_data:0.0.5
    ports:
    - "9042:9042"
    environment:
      SERVICE_9042_NAME: cassandra
  elasticsearch:
    image: elasticsearch:1.7.5
    ports:
    - "9200:9200"
    - "9300:9300"
    environment:
      SERVICE_9200_NAME: elasticsearch
      SERVICE_9200_CHECK_SCRIPT: curl -s http://elasticsearch:9200/_cat/health?h=status | grep -q green
  riak:
    image: basho/riak-kv:2.1.4
    ports:
    - "8087:8087"
    - "8089:8089"
    - "8098:8098"
  graphite:
    image:  hopsoft/graphite-statsd
    ports:
    - "8082:80" # web ui
    - "2003:2003"
    - "2004:2004"
    - "2023:2023"
    - "2024:2024"
    - "8125:8125/udp"
    - "8126:8126"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_CREATE_TOPICS: "conversations:1:1,logs:1:1,access_logs:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      SERVICE_NAME: kafkalog
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  postgres: # this is needed for GTUK
    image: postgres
    ports:
      - "5432:5432"
